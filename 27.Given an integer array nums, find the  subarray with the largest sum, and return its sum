#include <stdio.h>
#include <limits.h> // For INT_MIN

// Function to find the maximum sum of a subarray
int maxSubArraySum(int* nums, int numsSize) {
    if (numsSize == 0) return 0; // Handle empty array case

    int max_sum = INT_MIN; // Initialize to the smallest possible integer value
    int current_sum = 0;
    
    for (int i = 0; i < numsSize; i++) {
        // Update current_sum to be the maximum of the current element or current_sum + current element
        current_sum = (current_sum > 0) ? (current_sum + nums[i]) : nums[i];
        
        // Update max_sum to be the maximum value between itself and current_sum
        if (current_sum > max_sum) {
            max_sum = current_sum;
        }
    }
    
    return max_sum;
}

int main() {
    int nums[] = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    int numsSize = sizeof(nums) / sizeof(nums[0]);

    int result = maxSubArraySum(nums, numsSize);
    printf("The maximum sum of a subarray is: %d\n", result);

    return 0;
}
